{"version":3,"sources":["config.js","reducers/messageLogReducer.js","utils/idGenerator.js","components/Message.js","components/MessageLog.js","reducers/messageReducer.js","components/MessagePrompt.js","reducers/userReducer.js","components/CreateUser.js","utils/colors.js","components/Chat.js","reducers/socketReducer.js","App.js","store.js","index.js"],"names":["WSPORT","process","REACT_APP_WEBSOCKET_PORT","PORT","module","exports","addMessageToLog","value","type","messageLogReducer","state","action","concat","idGenerator","S4","Math","random","toString","substring","connect","user","userReducer","message","console","log","className","style","color","name","mapDispatchToProps","setMessageLog","map","key","messageReducer","setMessage","socket","socketReducer","placeholder","autoFocus","onChange","e","target","onClick","preventDefault","emit","setUser","userPlaceholder","onSubmit","event","length","handleFormSubmit","handleFormChange","class","setSocket","io","on","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29df706c.chunk.js","sourcesContent":["if (process.env.NODE_ENV !== \"production\") {\n  require(\"dotenv\").config()\n}\n\nlet WSPORT = process.env.REACT_APP_WEBSOCKET_PORT\nlet PORT = process.env.REACT_APP_HTTP_PORT\n\nif (process.env.NODE_ENV === \"production\") {\n  PORT = process.env.PORT\n}\n\nmodule.exports = {\n  WSPORT,\n  PORT\n}\n","const messageLogReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_MESSAGE_LOG\":\n      return action.value\n    case \"ADD_MESSAGE_TO_LOG\":\n      return state.concat(action.value)\n    default:\n      return state\n  }\n}\nexport const addMessageToLog = value => {\n  return {\n    type: \"ADD_MESSAGE_TO_LOG\",\n    value\n  }\n}\n\nexport const setMessageLog = value => {\n  return {\n    type: \"SET_MESSAGE_LOG\",\n    value\n  }\n}\n\nexport default messageLogReducer\n","export const idGenerator = () => {\n  const S4 = () => {\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n  }\n  return `${S4()}${S4()}-${S4()}-${S4()}-${S4()}-${S4()}${S4()}${S4()}`\n}\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\"\n\nconst Message = ({ user, message }) => {\n  console.log(\"user:\", user)\n\n  return (\n    <div className=\"messageElement\">\n      <span style={{ color: user.color }}>{`<${user.name}>`}</span>\n      <span>{message}</span>\n    </div>\n  )\n}\nconst mapStateToProps = state => ({ user: state.userReducer })\n\nexport default connect(mapStateToProps)(Message)\n","import React from \"react\"\nimport { setMessageLog } from \"../reducers/messageLogReducer\"\nimport { connect } from \"react-redux\"\nimport { idGenerator } from \"../utils/idGenerator\"\nimport Message from \"./Message\"\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\"\n\nconst MessageLog = ({ log, setMessageLog }) => {\n  return (\n    <ul className=\"messageLog\">\n      {log.map(message => (\n        <Message key={idGenerator()} message={message}></Message>\n      ))}\n    </ul>\n  )\n}\n\nconst mapStateToProps = state => ({\n  log: state.messageLogReducer\n})\nconst mapDispatchToProps = {\n  setMessageLog\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageLog)\n","const messageReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"SET_MESSAGE\":\n      return action.value\n    default:\n      return state\n  }\n}\n\nexport const setMessage = value => {\n  return {\n    type: \"SET_MESSAGE\",\n    value\n  }\n}\n\nexport default messageReducer\n","import React from \"react\"\nimport { setMessage } from \"../reducers/messageReducer\"\nimport { addMessageToLog } from \"../reducers/messageLogReducer\"\nimport { connect } from \"react-redux\"\n\nconst MessagePrompt = ({ socket, message, setMessage, addMessageToLog }) => {\n  const handleMessageSubmit = event => {\n    event.preventDefault()\n    if (!message) {\n      return\n    }\n    addMessageToLog(message)\n    socket.emit(\"SENT_MESSAGE\", message)\n    setMessage(\"\")\n  }\n  const handleMessageChange = event => {\n    setMessage(event.target.value)\n  }\n\n  return (\n    <div>\n      <form>\n        <input\n          placeholder=\"Send message\"\n          autoFocus={true}\n          type=\"text\"\n          value={message}\n          onChange={e => handleMessageChange(e)}\n        ></input>\n        <button onClick={e => handleMessageSubmit(e)}>send</button>\n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  message: state.messageReducer,\n  socket: state.socketReducer\n})\nconst mapDispatchToProps = {\n  setMessage,\n  addMessageToLog\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagePrompt)\n","const initialUser = {\n  name: \"\",\n  color: \"red\"\n}\n\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return action.value\n    default:\n      return state\n  }\n}\n\nexport const setUser = value => {\n  return {\n    type: \"SET_USER\",\n    value\n  }\n}\n\nexport default userReducer\n","import React from \"react\"\nimport { setUser } from \"../reducers/userReducer\"\nimport { addMessageToLog } from \"../reducers/messageLogReducer\"\nimport { connect } from \"react-redux\"\nimport { randomColor } from \"../utils/colors\"\n\nconst CreateUser = ({ user, socket, setUser, addMessageToLog }) => {\n  const color = randomColor()\n  let userPlaceholder = { name: \"\", color }\n\n  const handleFormSubmit = event => {\n    event.preventDefault()\n\n    if (userPlaceholder.name.length < 1) {\n      console.log(\"2short\")\n      return\n    }\n    setUser(userPlaceholder)\n    const message = \"Joined the chat\"\n    addMessageToLog(message)\n    socket.emit(\"SENT_MESSAGE\", message)\n  }\n\n  const handleFormChange = event => {\n    userPlaceholder.name = event.target.value\n  }\n\n  return (\n    <div>\n      <form onSubmit={event => handleFormSubmit(event)}>\n        <input\n          placeholder=\"Set nametag\"\n          onChange={event => handleFormChange(event)}\n          type=\"text\"\n        ></input>\n      </form>\n    </div>\n  )\n}\nconst mapStateToProps = state => ({\n  user: state.userReducer,\n  socket: state.socketReducer\n})\nconst mapDispatchToProps = {\n  setUser,\n  addMessageToLog\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateUser)\n","export const randomColor = () => {\n  return \"hsl(\" + 360 * Math.random() + \",\" + 100 + \"%,\" + 50 + \"%)\"\n}\n","import React from \"react\"\nimport MessageLog from \"./MessageLog\"\nimport MessagePrompt from \"./MessagePrompt\"\nimport CreateUser from \"./CreateUser\"\nimport { connect } from \"react-redux\"\n\nconst Chat = ({ user }) => {\n  return (\n    <div className=\"mainChat\">\n      <MessageLog class=\"messageLog\"></MessageLog>\n      {user ? <MessagePrompt></MessagePrompt> : <CreateUser></CreateUser>}\n    </div>\n  )\n}\nconst mapStateToProps = state => ({ user: state.userReducer })\nexport default connect(mapStateToProps)(Chat)\n","const socketReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"SET_SOCKET\":\n      return action.value\n    default:\n      return state\n  }\n}\n\nexport const setSocket = value => {\n  return {\n    type: \"SET_SOCKET\",\n    value\n  }\n}\n\nexport default socketReducer\n","import React from \"react\"\nimport io from \"socket.io-client\"\n\nimport Chat from \"./components/Chat\"\nimport { addMessageToLog } from \"./reducers/messageLogReducer\"\n\nimport { setSocket } from \"./reducers/socketReducer\"\nimport { connect } from \"react-redux\"\n\nimport { WSPORT, PORT } from \"./config\"\n\nconst App = ({ setSocket, addMessageToLog }) => {\n  const socket = io(PORT)\n\n  console.log(\"socket:\", socket)\n  console.log(\"WSPORT:\", WSPORT)\n  console.log(\"PORT:\", PORT)\n\n  socket.on(\"BROADCAST_MESSAGE\", message => {\n    addMessageToLog(message)\n  })\n\n  setSocket(socket)\n\n  return <Chat></Chat>\n}\nconst mapDispatchToProps = {\n  setSocket,\n  addMessageToLog\n}\nexport default connect(null, mapDispatchToProps)(App)\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport messageLogReducer from \"./reducers/messageLogReducer\"\nimport messageReducer from \"./reducers/messageReducer\"\nimport socketReducer from \"./reducers/socketReducer\"\nimport userReducer from \"./reducers/userReducer\"\n\nconst reducer = combineReducers({\n  messageLogReducer,\n  messageReducer,\n  socketReducer,\n  userReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport store from \"./store\"\nimport { Provider } from \"react-redux\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./styles.css\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}