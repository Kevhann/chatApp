{"version":3,"sources":["config.js","reducers/messageLogReducer.js","utils/utils.js","components/Message.js","components/MessageLog.js","reducers/messageReducer.js","components/MessagePrompt.js","reducers/userReducer.js","components/CreateUser.js","components/Chat.js","reducers/socketReducer.js","App.js","store.js","index.js"],"names":["WSPORT","process","REACT_APP_WEBSOCKET_PORT","PORT","module","exports","addMessageToLog","value","type","messageLogReducer","state","action","concat","getCurrentTimeStamp","Date","substring","idGenerator","S4","Math","random","toString","Message","message","className","style","color","time","from","content","mapDispatchToProps","setMessageLog","connect","messageLog","map","key","messageReducer","setMessage","socket","socketReducer","user","userReducer","placeholder","autoFocus","onChange","e","target","onClick","event","preventDefault","console","log","messageObject","name","emit","handleMessageSubmit","setUser","namePlaceHolder","on","onSubmit","length","handleFormSubmit","handleFormChange","class","setSocket","io","msg","err","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bea942e7.chunk.js","sourcesContent":["if (process.env.NODE_ENV !== \"production\") {\n  require(\"dotenv\").config()\n}\n\nlet WSPORT = process.env.REACT_APP_WEBSOCKET_PORT\nlet PORT = process.env.REACT_APP_HTTP_PORT\n\nif (process.env.NODE_ENV === \"production\") {\n  PORT = process.env.PORT\n}\n\nmodule.exports = {\n  WSPORT,\n  PORT\n}\n","const messageLogReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_MESSAGE_LOG\":\n      return action.value\n    case \"ADD_MESSAGE_TO_LOG\":\n      return state.concat(action.value)\n    default:\n      return state\n  }\n}\nexport const addMessageToLog = value => {\n  return {\n    type: \"ADD_MESSAGE_TO_LOG\",\n    value\n  }\n}\n\nexport const setMessageLog = value => {\n  return {\n    type: \"SET_MESSAGE_LOG\",\n    value\n  }\n}\n\nexport default messageLogReducer\n","export const getCurrentTimeStamp = () => Date().substring(16, 24)\n\nexport const randomColor = () => {\n  return \"hsl(\" + 360 * Math.random() + \",\" + 100 + \"%,\" + 50 + \"%)\"\n}\n\nexport const idGenerator = () => {\n  const S4 = () => {\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n  }\n  return `${S4()}${S4()}-${S4()}-${S4()}-${S4()}-${S4()}${S4()}${S4()}`\n}\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\"\n\nconst Message = ({ message }) => {\n  // console.log(\"user:\", user)\n  if (message.type === \"USER_JOIN\") {\n    return (\n      <div className=\"messageElement\">\n        <span\n          style={{ color: message.color }}\n        >{`<${message.time} ${message.from} ${message.content}>`}</span>\n      </div>\n    )\n  }\n  // console.log(\"message:\", message)\n  return (\n    <div className=\"messageElement\">\n      <span\n        style={{ color: message.color }}\n      >{`<${message.time} ${message.from}>`}</span>\n      <span className=\"message-content\">{message.content}</span>\n    </div>\n  )\n}\n// const mapStateToProps = state => ({ user: state.userReducer })\n\n// export default connect(mapStateToProps)(Message)\nexport default Message\n","import React from \"react\"\nimport { setMessageLog } from \"../reducers/messageLogReducer\"\nimport { connect } from \"react-redux\"\nimport { idGenerator } from \"../utils/utils\"\nimport Message from \"./Message\"\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\"\n\nconst MessageLog = ({ messageLog, setMessageLog }) => {\n  return (\n    <ul className=\"messageLog\">\n      {messageLog.map(message => (\n        <Message key={idGenerator()} message={message}></Message>\n      ))}\n    </ul>\n  )\n}\n\nconst mapStateToProps = state => ({\n  messageLog: state.messageLogReducer\n})\nconst mapDispatchToProps = {\n  setMessageLog\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageLog)\n","const messageReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"SET_MESSAGE\":\n      return action.value\n    default:\n      return state\n  }\n}\n\nexport const setMessage = value => {\n  return {\n    type: \"SET_MESSAGE\",\n    value\n  }\n}\n\nexport default messageReducer\n","import React from \"react\"\nimport { setMessage } from \"../reducers/messageReducer\"\nimport { addMessageToLog } from \"../reducers/messageLogReducer\"\nimport { connect } from \"react-redux\"\nimport { getCurrentTimeStamp } from \"../utils/utils\"\n\nconst MessagePrompt = ({\n  user,\n  socket,\n  message,\n  setMessage,\n  addMessageToLog\n}) => {\n  const handleMessageSubmit = event => {\n    event.preventDefault()\n    if (!message) {\n      return\n    }\n    const time = getCurrentTimeStamp()\n\n    console.log(\"user:\", user)\n    console.log(\"message:\", message)\n    const messageObject = {\n      content: message,\n      time,\n      from: user.name,\n      color: user.color\n    }\n    addMessageToLog(messageObject)\n    socket.emit(\"SENT_MESSAGE\", messageObject)\n\n    setMessage(\"\")\n  }\n\n  const handleMessageChange = event => {\n    setMessage(event.target.value)\n  }\n\n  return (\n    <div>\n      <form>\n        <input\n          placeholder=\"Send message\"\n          autoFocus={true}\n          type=\"text\"\n          value={message}\n          onChange={e => handleMessageChange(e)}\n        ></input>\n        <button onClick={e => handleMessageSubmit(e)}>send</button>\n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  message: state.messageReducer,\n  socket: state.socketReducer,\n  user: state.userReducer\n})\nconst mapDispatchToProps = {\n  setMessage,\n  addMessageToLog\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagePrompt)\n","const userReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return action.value\n    default:\n      return state\n  }\n}\n\nexport const setUser = value => {\n  return {\n    type: \"SET_USER\",\n    value\n  }\n}\n\nexport default userReducer\n","import React from \"react\"\nimport { setUser } from \"../reducers/userReducer\"\nimport { addMessageToLog } from \"../reducers/messageLogReducer\"\nimport { connect } from \"react-redux\"\nimport { randomColor, getCurrentTimeStamp } from \"../utils/utils\"\n\nconst CreateUser = ({ user, socket, setUser, addMessageToLog }) => {\n  const color = randomColor()\n  let namePlaceHolder = \"\"\n\n  const handleFormSubmit = event => {\n    event.preventDefault()\n\n    if (namePlaceHolder.length < 1) {\n      console.log(\"2short\")\n      return\n    }\n    // setUser({ name: namePlaceHolder, color })\n    const time = getCurrentTimeStamp()\n    const content = \"Joined the chat\"\n    const message = {\n      content,\n      time,\n      type: \"USER_JOIN\",\n      from: namePlaceHolder,\n      color\n    }\n\n    // setUser({ name: namePlaceHolder, color })\n    // addMessageToLog(message)\n\n    socket.emit(\"SET_NAME_TAG\", message)\n  }\n\n  socket.on(\"USER_CONNECTED\", user => {\n    console.log(\"user:\", user)\n    setUser({ name: user.from, color: user.color })\n    addMessageToLog(user)\n  })\n\n  const handleFormChange = event => {\n    namePlaceHolder = event.target.value\n  }\n\n  return (\n    <div>\n      <form onSubmit={event => handleFormSubmit(event)}>\n        <input\n          placeholder=\"Set nametag\"\n          onChange={event => handleFormChange(event)}\n          type=\"text\"\n        ></input>\n      </form>\n    </div>\n  )\n}\nconst mapStateToProps = state => ({\n  user: state.userReducer,\n  socket: state.socketReducer\n})\nconst mapDispatchToProps = {\n  setUser,\n  addMessageToLog\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateUser)\n","import React from \"react\"\nimport MessageLog from \"./MessageLog\"\nimport MessagePrompt from \"./MessagePrompt\"\nimport CreateUser from \"./CreateUser\"\nimport { connect } from \"react-redux\"\n\nconst Chat = ({ user }) => {\n  return (\n    <div className=\"mainChat\">\n      <MessageLog class=\"messageLog\"></MessageLog>\n      {user ? <MessagePrompt></MessagePrompt> : <CreateUser></CreateUser>}\n    </div>\n  )\n}\nconst mapStateToProps = state => ({ user: state.userReducer })\nexport default connect(mapStateToProps)(Chat)\n","const socketReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"SET_SOCKET\":\n      return action.value\n    default:\n      return state\n  }\n}\n\nexport const setSocket = value => {\n  return {\n    type: \"SET_SOCKET\",\n    value\n  }\n}\n\nexport default socketReducer\n","import React from \"react\"\nimport io from \"socket.io-client\"\n\nimport Chat from \"./components/Chat\"\nimport { addMessageToLog } from \"./reducers/messageLogReducer\"\n\nimport { setSocket } from \"./reducers/socketReducer\"\nimport { setUser } from \"./reducers/userReducer\"\nimport { connect } from \"react-redux\"\n\nimport { WSPORT, PORT } from \"./config\"\n\nconst App = ({ setUser, setSocket, addMessageToLog }) => {\n  const socket = io(PORT)\n\n  socket.on(\"popup\", function(msg) {\n    console.log(\"hello: \", msg)\n  })\n  socket.on(\"connection\", function() {\n    console.log(\"client connected\")\n  })\n\n  socket.on(\"connect_error\", function(err) {\n    console.log(\"client connect_error: \", err)\n  })\n\n  socket.on(\"connect_timeout\", function(err) {\n    console.log(\"client connect_timeout: \", err)\n  })\n\n  console.log(\"socket:\", socket)\n  console.log(\"WSPORT:\", WSPORT)\n  console.log(\"PORT:\", PORT)\n\n  socket.on(\"BROADCAST_MESSAGE\", message => {\n    addMessageToLog(message)\n  })\n\n  socket.on(\"USER_TAKEN\", user => {\n    addMessageToLog(user)\n  })\n\n  setSocket(socket)\n\n  return <Chat></Chat>\n}\nconst mapDispatchToProps = {\n  setSocket,\n  addMessageToLog,\n  setUser\n}\nexport default connect(null, mapDispatchToProps)(App)\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport messageLogReducer from \"./reducers/messageLogReducer\"\nimport messageReducer from \"./reducers/messageReducer\"\nimport socketReducer from \"./reducers/socketReducer\"\nimport userReducer from \"./reducers/userReducer\"\n\nconst reducer = combineReducers({\n  messageLogReducer,\n  messageReducer,\n  socketReducer,\n  userReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport store from \"./store\"\nimport { Provider } from \"react-redux\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./styles.css\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}